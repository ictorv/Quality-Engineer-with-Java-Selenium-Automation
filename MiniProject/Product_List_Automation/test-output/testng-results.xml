<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="2" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-06-25T09:30:48 IST" name="Suite" finished-at="2025-06-25T09:31:39 IST" duration-ms="51345">
    <groups>
    </groups>
    <test started-at="2025-06-25T09:30:48 IST" name="ChromeTest" finished-at="2025-06-25T09:31:16 IST" duration-ms="27608">
      <class name="main.ProductListAutomation.PepperfryMainTest">
        <test-method is-config="true" signature="startReporter()[pri:0, instance:main.ProductListAutomation.PepperfryMainTest@74e52ef6]" started-at="2025-06-25T09:30:48 IST" name="startReporter" finished-at="2025-06-25T09:30:48 IST" duration-ms="256" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReporter -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:main.ProductListAutomation.PepperfryMainTest@74e52ef6]" started-at="2025-06-25T09:30:48 IST" name="setUp" finished-at="2025-06-25T09:30:56 IST" duration-ms="7449" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testPepperfryWorkflow()[pri:0, instance:main.ProductListAutomation.PepperfryMainTest@74e52ef6]" started-at="2025-06-25T09:30:56 IST" name="testPepperfryWorkflow" finished-at="2025-06-25T09:31:12 IST" duration-ms="15916" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPepperfryWorkflow -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:main.ProductListAutomation.PepperfryMainTest@74e52ef6]" started-at="2025-06-25T09:31:12 IST" name="getResult" finished-at="2025-06-25T09:31:12 IST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPepperfryWorkflow status=SUCCESS method=PepperfryMainTest.testPepperfryWorkflow()[pri:0, instance:main.ProductListAutomation.PepperfryMainTest@74e52ef6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:main.ProductListAutomation.PepperfryMainTest@74e52ef6]" started-at="2025-06-25T09:31:12 IST" name="tearDown" finished-at="2025-06-25T09:31:15 IST" duration-ms="3597" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="flushReport()[pri:0, instance:main.ProductListAutomation.PepperfryMainTest@74e52ef6]" started-at="2025-06-25T09:31:15 IST" name="flushReport" finished-at="2025-06-25T09:31:16 IST" duration-ms="336" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReport -->
      </class> <!-- main.ProductListAutomation.PepperfryMainTest -->
    </test> <!-- ChromeTest -->
    <test started-at="2025-06-25T09:31:16 IST" name="EdgeTest" finished-at="2025-06-25T09:31:39 IST" duration-ms="23710">
      <class name="main.ProductListAutomation.PepperfryMainTest">
        <test-method is-config="true" signature="startReporter()[pri:0, instance:main.ProductListAutomation.PepperfryMainTest@587e5365]" started-at="2025-06-25T09:31:16 IST" name="startReporter" finished-at="2025-06-25T09:31:16 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReporter -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:main.ProductListAutomation.PepperfryMainTest@587e5365]" started-at="2025-06-25T09:31:16 IST" name="setUp" finished-at="2025-06-25T09:31:21 IST" duration-ms="4857" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testPepperfryWorkflow()[pri:0, instance:main.ProductListAutomation.PepperfryMainTest@587e5365]" started-at="2025-06-25T09:31:21 IST" name="testPepperfryWorkflow" finished-at="2025-06-25T09:31:35 IST" duration-ms="14987" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPepperfryWorkflow -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:main.ProductListAutomation.PepperfryMainTest@587e5365]" started-at="2025-06-25T09:31:36 IST" name="getResult" finished-at="2025-06-25T09:31:36 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPepperfryWorkflow status=SUCCESS method=PepperfryMainTest.testPepperfryWorkflow()[pri:0, instance:main.ProductListAutomation.PepperfryMainTest@587e5365] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:main.ProductListAutomation.PepperfryMainTest@587e5365]" started-at="2025-06-25T09:31:36 IST" name="tearDown" finished-at="2025-06-25T09:31:39 IST" duration-ms="3813" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="flushReport()[pri:0, instance:main.ProductListAutomation.PepperfryMainTest@587e5365]" started-at="2025-06-25T09:31:39 IST" name="flushReport" finished-at="2025-06-25T09:31:39 IST" duration-ms="43" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReport -->
      </class> <!-- main.ProductListAutomation.PepperfryMainTest -->
    </test> <!-- EdgeTest -->
  </suite> <!-- Suite -->
</testng-results>
