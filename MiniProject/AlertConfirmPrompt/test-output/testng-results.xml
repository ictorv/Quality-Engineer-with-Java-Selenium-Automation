<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="4" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-07-04T16:53:25 IST" name="AlertConfirmPromptSuite" finished-at="2025-07-04T16:55:07 IST" duration-ms="101487">
    <groups>
    </groups>
    <test started-at="2025-07-04T16:53:25 IST" name="AlertConfirmPromptSuiteTests2" finished-at="2025-07-04T16:55:05 IST" duration-ms="99337">
      <class name="com.TestingScenario.AlertPromptConfirm">
        <test-method is-config="true" signature="startReporter()[pri:0, instance:com.TestingScenario.AlertPromptConfirm@71e9ddb4]" started-at="2025-07-04T16:53:25 IST" name="startReporter" finished-at="2025-07-04T16:53:26 IST" duration-ms="342" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReporter -->
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:com.TestingScenario.AlertPromptConfirm@71e9ddb4]" started-at="2025-07-04T16:53:26 IST" name="setup" finished-at="2025-07-04T16:54:50 IST" duration-ms="83829" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testAlertWithOk()[pri:1, instance:com.TestingScenario.AlertPromptConfirm@71e9ddb4]" started-at="2025-07-04T16:54:50 IST" name="testAlertWithOk" finished-at="2025-07-04T16:54:50 IST" duration-ms="621" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAlertWithOk -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.TestingScenario.AlertPromptConfirm@71e9ddb4]" started-at="2025-07-04T16:54:50 IST" name="getResult" finished-at="2025-07-04T16:54:50 IST" duration-ms="9" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAlertWithOk status=SUCCESS method=AlertPromptConfirm.testAlertWithOk()[pri:1, instance:com.TestingScenario.AlertPromptConfirm@71e9ddb4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="testAlertWithOkCancel()[pri:2, instance:com.TestingScenario.AlertPromptConfirm@71e9ddb4]" started-at="2025-07-04T16:54:50 IST" name="testAlertWithOkCancel" finished-at="2025-07-04T16:54:51 IST" duration-ms="437" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAlertWithOkCancel -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.TestingScenario.AlertPromptConfirm@71e9ddb4]" started-at="2025-07-04T16:54:51 IST" name="getResult" finished-at="2025-07-04T16:54:51 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAlertWithOkCancel status=SUCCESS method=AlertPromptConfirm.testAlertWithOkCancel()[pri:2, instance:com.TestingScenario.AlertPromptConfirm@71e9ddb4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="testAlertWithTextBox()[pri:3, instance:com.TestingScenario.AlertPromptConfirm@71e9ddb4]" started-at="2025-07-04T16:54:51 IST" name="testAlertWithTextBox" finished-at="2025-07-04T16:55:01 IST" duration-ms="10238" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//di[contains(@class,'col-md-12')]/div/div[2]/div[3]/button[contains(@class,'btn btn')]"}
  (Session info: MicrosoftEdge=138.0.3351.65)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.32.0', revision: 'd17c8aa950'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.5'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [b338e06f28bb39aec8e1a4be9bc15023, findElement {value=//di[contains(@class,'col-md-12')]/div/div[2]/div[3]/button[contains(@class,'btn btn')], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: MicrosoftEdge, browserVersion: 138.0.3351.65, fedcm:accounts: true, ms:edgeOptions: {debuggerAddress: localhost:60571}, msedge: {msedgedriverVersion: 138.0.3351.65 (81e3782c3ab4..., userDataDir: C:\Users\2403715\AppData\Lo...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:60571/devtoo..., se:cdpVersion: 138.0.3351.65, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: b338e06f28bb39aec8e1a4be9bc15023]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//di[contains(@class,'col-md-12')]/div/div[2]/div[3]/button[contains(@class,'btn btn')]"}
  (Session info: MicrosoftEdge=138.0.3351.65)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.32.0', revision: 'd17c8aa950'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.5'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [b338e06f28bb39aec8e1a4be9bc15023, findElement {value=//di[contains(@class,'col-md-12')]/div/div[2]/div[3]/button[contains(@class,'btn btn')], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: MicrosoftEdge, browserVersion: 138.0.3351.65, fedcm:accounts: true, ms:edgeOptions: {debuggerAddress: localhost:60571}, msedge: {msedgedriverVersion: 138.0.3351.65 (81e3782c3ab4..., userDataDir: C:\Users\2403715\AppData\Lo...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:60571/devtoo..., se:cdpVersion: 138.0.3351.65, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: b338e06f28bb39aec8e1a4be9bc15023
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy18.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:304)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:290)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:287)
at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:656)
at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:652)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:203)
at com.HandlingAlertConfirmPrompt.HandlingAlertWithTextBox.handlePrompt(HandlingAlertWithTextBox.java:66)
at com.TestingScenario.AlertPromptConfirm.testAlertWithTextBox(AlertPromptConfirm.java:81)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAlertWithTextBox -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.TestingScenario.AlertPromptConfirm@71e9ddb4]" started-at="2025-07-04T16:55:01 IST" name="getResult" finished-at="2025-07-04T16:55:01 IST" duration-ms="131" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAlertWithTextBox status=FAILURE method=AlertPromptConfirm.testAlertWithTextBox()[pri:3, instance:com.TestingScenario.AlertPromptConfirm@71e9ddb4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.TestingScenario.AlertPromptConfirm@71e9ddb4]" started-at="2025-07-04T16:55:01 IST" name="tearDown" finished-at="2025-07-04T16:55:04 IST" duration-ms="3297" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="flushReport()[pri:0, instance:com.TestingScenario.AlertPromptConfirm@71e9ddb4]" started-at="2025-07-04T16:55:04 IST" name="flushReport" finished-at="2025-07-04T16:55:05 IST" duration-ms="360" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReport -->
      </class> <!-- com.TestingScenario.AlertPromptConfirm -->
    </test> <!-- AlertConfirmPromptSuiteTests2 -->
    <test started-at="2025-07-04T16:53:25 IST" name="AlertConfirmPromptSuiteTests" finished-at="2025-07-04T16:55:07 IST" duration-ms="101487">
      <class name="com.TestingScenario.AlertPromptConfirm">
        <test-method is-config="true" signature="startReporter()[pri:0, instance:com.TestingScenario.AlertPromptConfirm@3bf7ca37]" started-at="2025-07-04T16:53:25 IST" name="startReporter" finished-at="2025-07-04T16:53:26 IST" duration-ms="342" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReporter -->
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:com.TestingScenario.AlertPromptConfirm@3bf7ca37]" started-at="2025-07-04T16:53:26 IST" name="setup" finished-at="2025-07-04T16:54:53 IST" duration-ms="86663" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testAlertWithOk()[pri:1, instance:com.TestingScenario.AlertPromptConfirm@3bf7ca37]" started-at="2025-07-04T16:54:53 IST" name="testAlertWithOk" finished-at="2025-07-04T16:54:53 IST" duration-ms="619" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAlertWithOk -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.TestingScenario.AlertPromptConfirm@3bf7ca37]" started-at="2025-07-04T16:54:53 IST" name="getResult" finished-at="2025-07-04T16:54:53 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAlertWithOk status=SUCCESS method=AlertPromptConfirm.testAlertWithOk()[pri:1, instance:com.TestingScenario.AlertPromptConfirm@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="testAlertWithOkCancel()[pri:2, instance:com.TestingScenario.AlertPromptConfirm@3bf7ca37]" started-at="2025-07-04T16:54:53 IST" name="testAlertWithOkCancel" finished-at="2025-07-04T16:54:54 IST" duration-ms="459" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAlertWithOkCancel -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.TestingScenario.AlertPromptConfirm@3bf7ca37]" started-at="2025-07-04T16:54:54 IST" name="getResult" finished-at="2025-07-04T16:54:54 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAlertWithOkCancel status=SUCCESS method=AlertPromptConfirm.testAlertWithOkCancel()[pri:2, instance:com.TestingScenario.AlertPromptConfirm@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="testAlertWithTextBox()[pri:3, instance:com.TestingScenario.AlertPromptConfirm@3bf7ca37]" started-at="2025-07-04T16:54:54 IST" name="testAlertWithTextBox" finished-at="2025-07-04T16:55:04 IST" duration-ms="10279" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//di[contains(@class,'col-md-12')]/div/div[2]/div[3]/button[contains(@class,'btn btn')]"}
  (Session info: chrome=137.0.7151.69)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.32.0', revision: 'd17c8aa950'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [009e3ce99fc8d9252b4672f6d994d206, findElement {value=//di[contains(@class,'col-md-12')]/div/div[2]/div[3]/button[contains(@class,'btn btn')], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 137.0.7151.69, chrome: {chromedriverVersion: 137.0.7151.119 (e0ac9d12dff..., userDataDir: C:\Users\2403715\AppData\Lo...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:60574}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:60574/devtoo..., se:cdpVersion: 137.0.7151.69, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 009e3ce99fc8d9252b4672f6d994d206]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//di[contains(@class,'col-md-12')]/div/div[2]/div[3]/button[contains(@class,'btn btn')]"}
  (Session info: chrome=137.0.7151.69)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.32.0', revision: 'd17c8aa950'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [009e3ce99fc8d9252b4672f6d994d206, findElement {value=//di[contains(@class,'col-md-12')]/div/div[2]/div[3]/button[contains(@class,'btn btn')], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 137.0.7151.69, chrome: {chromedriverVersion: 137.0.7151.119 (e0ac9d12dff..., userDataDir: C:\Users\2403715\AppData\Lo...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:60574}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:60574/devtoo..., se:cdpVersion: 137.0.7151.69, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 009e3ce99fc8d9252b4672f6d994d206
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy18.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:304)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:290)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:287)
at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:656)
at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:652)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:203)
at com.HandlingAlertConfirmPrompt.HandlingAlertWithTextBox.handlePrompt(HandlingAlertWithTextBox.java:66)
at com.TestingScenario.AlertPromptConfirm.testAlertWithTextBox(AlertPromptConfirm.java:81)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAlertWithTextBox -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.TestingScenario.AlertPromptConfirm@3bf7ca37]" started-at="2025-07-04T16:55:04 IST" name="getResult" finished-at="2025-07-04T16:55:04 IST" duration-ms="119" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAlertWithTextBox status=FAILURE method=AlertPromptConfirm.testAlertWithTextBox()[pri:3, instance:com.TestingScenario.AlertPromptConfirm@3bf7ca37] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.TestingScenario.AlertPromptConfirm@3bf7ca37]" started-at="2025-07-04T16:55:04 IST" name="tearDown" finished-at="2025-07-04T16:55:07 IST" duration-ms="2894" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="flushReport()[pri:0, instance:com.TestingScenario.AlertPromptConfirm@3bf7ca37]" started-at="2025-07-04T16:55:07 IST" name="flushReport" finished-at="2025-07-04T16:55:07 IST" duration-ms="60" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReport -->
      </class> <!-- com.TestingScenario.AlertPromptConfirm -->
    </test> <!-- AlertConfirmPromptSuiteTests -->
  </suite> <!-- AlertConfirmPromptSuite -->
</testng-results>
