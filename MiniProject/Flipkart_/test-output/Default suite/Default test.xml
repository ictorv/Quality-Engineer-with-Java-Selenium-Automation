<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="LTIN607638" failures="0" tests="9" name="Default test" time="0.12" errors="0" timestamp="2025-06-23T15:46:42 IST">
  <testcase classname="TestRepository.TestMain" name="@BeforeClass driverConfig" time="-1.750673802129E9">
    <failure type="org.testng.TestNGException" message="
Parameter &amp;apos;browser&amp;apos; is required by BeforeClass on method driverConfig but has not been marked @Optional or defined
in C:\Users\2403724\AppData\Local\Temp\testng-eclipse-2028230673\testng-customsuite.xml">
      <![CDATA[org.testng.TestNGException: 
Parameter 'browser' is required by BeforeClass on method driverConfig but has not been marked @Optional or defined
in C:\Users\2403724\AppData\Local\Temp\testng-eclipse-2028230673\testng-customsuite.xml
at org.testng.internal.Parameters.createParams(Parameters.java:264)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:352)
at org.testng.internal.Parameters.createParameters(Parameters.java:690)
at org.testng.internal.Parameters.createConfigurationParameters(Parameters.java:163)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:313)
at org.testng.internal.invokers.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:188)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
    </failure>
  </testcase> <!-- @BeforeClass driverConfig -->
  <testcase classname="TestRepository.TestMain" name="@BeforeClass startReporter" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeClass startReporter -->
  <testcase classname="TestRepository.TestMain" name="@AfterMethod getResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase classname="TestRepository.TestMain" name="@AfterMethod getResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase classname="TestRepository.TestMain" name="@AfterMethod getResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase classname="TestRepository.TestMain" name="@AfterMethod getResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase classname="TestRepository.TestMain" name="@AfterMethod getResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase classname="TestRepository.TestMain" name="@AfterMethod getResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase classname="TestRepository.TestMain" name="@AfterMethod getResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase classname="TestRepository.TestMain" name="@AfterMethod getResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase classname="TestRepository.TestMain" name="@AfterMethod getResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase classname="TestRepository.TestMain" name="@AfterClass tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterClass tearDown -->
  <testcase classname="TestRepository.TestMain" name="@AfterTest flushReport" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterTest flushReport -->
  <testcase classname="TestRepository.TestMain" name="openBrowser" time="0.0">
    <skipped/>
  </testcase> <!-- openBrowser -->
  <testcase classname="TestRepository.TestMain" name="selectMenu" time="0.0">
    <skipped/>
  </testcase> <!-- selectMenu -->
  <testcase classname="TestRepository.TestMain" name="validatePage" time="0.0">
    <skipped/>
  </testcase> <!-- validatePage -->
  <testcase classname="TestRepository.TestMain" name="navigate" time="0.0">
    <skipped/>
  </testcase> <!-- navigate -->
  <testcase classname="TestRepository.TestMain" name="slider" time="0.0">
    <skipped/>
  </testcase> <!-- slider -->
  <testcase classname="TestRepository.TestMain" name="selectPie" time="0.0">
    <skipped/>
  </testcase> <!-- selectPie -->
  <testcase classname="TestRepository.TestMain" name="selectNewest" time="0.0">
    <skipped/>
  </testcase> <!-- selectNewest -->
  <testcase classname="TestRepository.TestMain" name="putData" time="0.0">
    <skipped/>
  </testcase> <!-- putData -->
  <testcase classname="TestRepository.TestMain" name="checkproduct" time="0.0">
    <skipped/>
  </testcase> <!-- checkproduct -->
</testsuite> <!-- Default test -->
